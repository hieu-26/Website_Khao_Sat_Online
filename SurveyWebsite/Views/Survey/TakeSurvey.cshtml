@model SurveyWebsite.Models.Survey

@{
    ViewData["Title"] = "Tham Gia Khảo Sát";
    var questions = Model.Questions.ToList();
    var totalQuestions = questions.Count;
    var isPaged = totalQuestions > 10;
    var questionsPerPage = 10;
    var totalPages = (int)Math.Ceiling((double)totalQuestions / questionsPerPage);
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <title>Tham Gia Khảo Sát</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .question-section {
            display: none;
        }

            .question-section.active {
                display: block;
            }

        .btn-custom-primary {
            background-color: #0056b3;
            color: #fff;
        }

            .btn-custom-primary:hover {
                background-color: #003f80;
            }

        .btn-custom-secondary {
            background-color: #f8f9fa;
            color: #0056b3;
            border: 1px solid #0056b3;
        }

            .btn-custom-secondary:hover {
                background-color: #e2e6ea;
                color: #003f80;
            }

        .is-invalid {
            border-color: #dc3545 !important;
        }

        .text-danger {
            font-size: 0.875em;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container mt-5">
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white text-center">
                <h3>@Model.Title</h3>
            </div>
            <div class="card-body">
                <p><strong>Mô tả:</strong> @Model.Description</p>

                <form asp-action="SubmitSurvey" asp-controller="Survey" method="post" id="surveyForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="surveyId" value="@Model.SurveyId" />

                    @if (isPaged)
                    {
                        for (int page = 0; page < totalPages; page++)
                        {
                            var start = page * questionsPerPage;
                            var end = Math.Min(start + questionsPerPage, totalQuestions);

                            <div id="section-@(page)" class="question-section @(page == 0 ? "active" : "")">
                                @for (int i = start; i < end; i++)
                                {
                                    var question = questions[i];
                                    <div class="mb-4 question-item" data-required="@question.IsRequired" data-question-id="@question.QuestionId">
                                        <h5 class="mb-2">Câu hỏi @(i + 1): @question.QuestionText @(question.IsRequired ? "<span class='text-danger'>*</span>" : "")</h5>

                                        @if (question.QuestionType == "SingleChoice" || question.QuestionType == "Radio")
                                        {
                                            foreach (var option in question.Options)
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input question-input" type="radio" name="question_@question.QuestionId" value="@option.OptionId" @(question.IsRequired ? "data-required" : "") />
                                                    <label class="form-check-label">@option.OptionText</label>
                                                </div>
                                            }
                                            <span class="text-danger answer-error"></span>
                                        }
                                        else if (question.QuestionType == "MultipleChoice")
                                        {
                                            foreach (var option in question.Options)
                                            {
                                                <div class="form-check">
                                                    <input class="form-check-input question-input" type="checkbox" name="question_@question.QuestionId" value="@option.OptionId" @(question.IsRequired ? "data-required" : "") />
                                                    <label class="form-check-label">@option.OptionText</label>
                                                </div>
                                            }
                                            <span class="text-danger answer-error"></span>
                                        }
                                        else if (question.QuestionType == "Tự luận" || question.QuestionType == "Text")
                                        {
                                            <textarea class="form-control question-input" name="question_@question.QuestionId" rows="3" @(question.IsRequired ? "required" : "")></textarea>
                                            <span class="text-danger answer-error"></span>
                                        }
                                    </div>
                                }

                                <div class="mt-4 d-flex justify-content-between">
                                    @if (page > 0)
                                    {
                                        <button type="button" class="btn btn-custom-secondary" onclick="showSection(@(page - 1))">Quay lại</button>
                                    }
                                    @if (page < totalPages - 1)
                                    {
                                        <button type="button" class="btn btn-custom-primary" onclick="nextSection(@(page), @(page + 1))">Tiếp tục</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-custom-primary">Gửi phản hồi</button>
                                    }
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            @for (int i = 0; i < totalQuestions; i++)
                            {
                                var question = questions[i];
                                <div class="mb-4 question-item" data-required="@question.IsRequired" data-question-id="@question.QuestionId">
                                    <h5 class="mb-2">Câu hỏi @(i + 1): @question.QuestionText @(question.IsRequired ? "<span class='text-danger'>*</span>" : "")</h5>

                                    @if (question.QuestionType == "SingleChoice" || question.QuestionType == "Radio")
                                    {
                                        foreach (var option in question.Options)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input question-input" type="radio" name="question_@question.QuestionId" value="@option.OptionId" @(question.IsRequired ? "data-required" : "") />
                                                <label class="form-check-label">@option.OptionText</label>
                                            </div>
                                        }
                                        <span class="text-danger answer-error"></span>
                                    }
                                    else if (question.QuestionType == "MultipleChoice")
                                    {
                                        foreach (var option in question.Options)
                                        {
                                            <div class="form-check">
                                                <input class="form-check-input question-input" type="checkbox" name="question_@question.QuestionId" value="@option.OptionId" @(question.IsRequired ? "data-required" : "") />
                                                <label class="form-check-label">@option.OptionText</label>
                                            </div>
                                        }
                                        <span class="text-danger answer-error"></span>
                                    }
                                    else if (question.QuestionType == "Tự luận" || question.QuestionType == "Text")
                                    {
                                        <textarea class="form-control question-input" name="question_@question.QuestionId" rows="3" @(question.IsRequired ? "required" : "")></textarea>
                                        <span class="text-danger answer-error"></span>
                                    }
                                </div>
                            }

                            <div class="text-end">
                                <button type="submit" class="btn btn-custom-primary">Gửi phản hồi</button>
                            </div>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>

    <script>
        function showSection(index) {
            document.querySelectorAll('.question-section').forEach(section => {
                section.classList.remove('active');
            });
            const target = document.getElementById('section-' + index);
            if (target) {
                target.classList.add('active');
                window.scrollTo(0, 0);
            }
        }

        function validateQuestion(questionItem) {
            const isRequired = questionItem.getAttribute('data-required') === 'True';
            if (!isRequired) return true;

            const inputs = questionItem.querySelectorAll('.question-input');
            const errorSpan = questionItem.querySelector('.answer-error');
            let isValid = false;

            if (inputs.length > 0) {
                if (inputs[0].type === 'radio' || inputs[0].type === 'checkbox') {
                    isValid = Array.from(inputs).some(input => input.checked);
                } else if (inputs[0].tagName === 'TEXTAREA') {
                    isValid = inputs[0].value.trim() !== '';
                }
            }

            if (!isValid) {
                errorSpan.textContent = 'Vui lòng trả lời câu hỏi này.';
                inputs.forEach(input => input.classList.add('is-invalid'));
            } else {
                errorSpan.textContent = '';
                inputs.forEach(input => input.classList.remove('is-invalid'));
            }
            return isValid;
        }

        function validateSection(sectionIndex) {
            const section = document.getElementById('section-' + sectionIndex);
            const questionItems = section.querySelectorAll('.question-item');
            let isValid = true;

            questionItems.forEach(item => {
                if (!validateQuestion(item)) {
                    isValid = false;
                }
            });
            return isValid;
        }

        function validateForm() {
            let isValid = true;
            const questionItems = document.querySelectorAll('.question-item');

            questionItems.forEach(item => {
                if (!validateQuestion(item)) {
                    isValid = false;
                }
            });

            if (!isValid) {
                alert('Vui lòng trả lời tất cả các câu hỏi bắt buộc trước khi gửi.');
                const firstInvalid = document.querySelector('.is-invalid');
                if (firstInvalid) {
                    const section = firstInvalid.closest('.question-section');
                    if (section && !section.classList.contains('active')) {
                        const sectionIndex = parseInt(section.id.split('-')[1]);
                        showSection(sectionIndex);
                    }
                    firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    firstInvalid.focus();
                }
            }
            return isValid;
        }

        function nextSection(currentIndex, nextIndex) {
            if (validateSection(currentIndex)) {
                showSection(nextIndex);
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('surveyForm');
            form.addEventListener('submit', function (event) {
                if (!validateForm()) {
                    event.preventDefault();
                }
            });

            document.querySelectorAll('.question-input').forEach(input => {
                input.addEventListener('change', function () {
                    const questionItem = this.closest('.question-item');
                    validateQuestion(questionItem);
                });
                input.addEventListener('input', function () {
                    const questionItem = this.closest('.question-item');
                    validateQuestion(questionItem);
                });
            });
        });
    </script>
</body>
</html>